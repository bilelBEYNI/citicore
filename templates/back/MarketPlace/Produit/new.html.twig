{% extends 'back/Dashboard.html.twig' %}

{% block title %}Ajouter un Produit{% endblock %}

{% block body %}
<div class="form-container">
    <h1>Ajouter un Produit</h1>

    {{ form_start(form, { attr: { novalidate: 'novalidate', id: 'produit_form' } }) }}
        {{ form_row(form.nom) }}

        <div class="mb-3">
            <button type="button"
                    class="btn btn-info"
                    id="btn-generate-description">
                <i class="fas fa-magic"></i> Générer la description
            </button>
            <small class="form-text text-muted">
                Cliquez pour générer automatiquement une description basée sur le nom du produit
            </small>
        </div>

        {{ form_row(form.description) }}
        {{ form_row(form.prix) }}
        {{ form_row(form.photo) }}

        <button type="submit" class="btn btn-success mt-3">
            <i class="fas fa-save"></i> Ajouter
        </button>
    {{ form_end(form) }}

    <a href="{{ path('app_produit_index') }}" class="btn btn-secondary mt-3">
        <i class="fas fa-arrow-left"></i> Retour à la liste
    </a>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const generateBtn = document.getElementById('btn-generate-description');
    const nomInput = document.getElementById('produit_nom');
    const descriptionInput = document.getElementById('produit_description');

    generateBtn.addEventListener('click', async () => {
        const nom = nomInput.value.trim();
        
        if (!nom) {
            alert("Veuillez d'abord saisir le nom du produit.");
            nomInput.focus();
            return;
        }

        generateBtn.disabled = true;
        generateBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Génération en cours...';

        try {
            const response = await fetch("{{ path('api_generate_description') }}", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                    "Accept": "application/json"
                },
                body: JSON.stringify({ nom: nom })
            });

            const data = await response.json();

            if (!response.ok) {
                throw new Error(data.error || 'Erreur lors de la génération');
            }

            if (data.description) {
                descriptionInput.value = data.description;
                descriptionInput.classList.add('bg-light');
                setTimeout(() => {
                    descriptionInput.classList.remove('bg-light');
                }, 1000);
            }
        } catch (error) {
            console.error("Erreur:", error);
            alert("Une erreur est survenue lors de la génération de la description : " + error.message);
        } finally {
            generateBtn.disabled = false;
            generateBtn.innerHTML = '<i class="fas fa-magic"></i> Générer la description';
        }
    });
});
</script>

<style>
.form-container {
    max-width: 800px;
    margin: 0 auto;
    padding: 20px;
}

.bg-light {
    transition: background-color 0.5s ease;
}

#produit_description {
    min-height: 150px;
}

.btn-info {
    margin-bottom: 1rem;
}

.form-text {
    display: block;
    margin-top: 0.25rem;
}
</style>
{% endblock %}